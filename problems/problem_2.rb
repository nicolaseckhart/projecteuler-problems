class Problem2
  MAXIMUM = 4_000_000
  TITLE = 'PROBLEM 2: Even Fibonacci numbers'.freeze
  DESCRIPTION = 'Each new term in the Fibonacci sequence is generated by adding the previous two terms. '\
                "By starting with 1 and 2, the first 10 terms will be:\n\n1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n\n"\
                'By considering the terms in the Fibonacci sequence whose values do not exceed four million, '\
                'find the sum of the even-valued terms.'.freeze

  def solve
    print_problem
    values = []
    1.step do |i|
      values << fib(i)
      break if fib(i + 1) >= 4_000_000
    end
    sum = values.uniq.select(&:even?).inject(:+)
    print_result(sum)
  end

  def fib(n, cache = {})
    return n if n == 0 || n == 1
    cache[n] ||= fib(n - 1, cache) + fib(n - 2, cache)
  end

  def print_problem
    puts TITLE
    puts DESCRIPTION
  end

  def print_result(result)
    puts "\nThe sum of the even valued fibonacci numbers below four million is #{result}."
  end
end

problem = Problem2.new
problem.solve
